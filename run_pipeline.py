import time

# Importa as fun√ß√µes principais de cada script do pipeline
from scripts.s01_unify_datasets import load_and_unify
from scripts.s02_build_features import run as run_build_features
from scripts.s03_vectorize_project import run as run_vectorize
from scripts.s04_make_plots import run as run_make_plots
from scripts.s05_topic_modeling import run_topic_modeling
from scripts.s06_sentiment_analysis import run as run_sentiment_analysis

def main():
    """
    Executa o pipeline completo de processamento de dados e gera√ß√£o de an√°lises.
    """
    start_time = time.time()
    print("=================================================")
    print("üöÄ INICIANDO PIPELINE COMPLETO DE AN√ÅLISE DE DADOS üöÄ")
    print("=================================================\n")

    # Dicion√°rio de etapas para facilitar a execu√ß√£o e o logging
    pipeline_steps = {
        "1. Unifica√ß√£o de Datasets": load_and_unify,
        "2. Constru√ß√£o de Features": run_build_features,
        "3. Vetoriza√ß√£o e Proje√ß√£o": run_vectorize,
        "4. An√°lise de Sentimento": run_sentiment_analysis,
        "5. Modelagem de T√≥picos": run_topic_modeling,
        "6. Gera√ß√£o de Gr√°ficos": run_make_plots,
    }

    for name, step_func in pipeline_steps.items():
        step_start_time = time.time()
        print(f"\n--- Etapa {name} ---\n")
        step_func()
        step_duration = time.time() - step_start_time
        print(f"\n--- Etapa {name} conclu√≠da em {step_duration:.2f} segundos ---")

    total_duration = time.time() - start_time
    print(f"\n======================================================")
    print(f"üéâ PIPELINE COMPLETO CONCLU√çDO COM SUCESSO! üéâ")
    print(f"   Tempo total de execu√ß√£o: {total_duration:.2f} segundos.")
    print(f"======================================================\n")

if __name__ == "__main__":
    main()